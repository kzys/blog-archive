<?xml version="1.0" encoding="utf-8" ?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja" xml:lang="ja">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta http-equiv="Content-Script-Type" content="text/javascript" />
  <link rel="stylesheet" type="text/css" href="http://blog.8-p.info/2009/wp-content/themes/b8i/ALL.css" />

  <link rel="alternate" type="application/rss+xml"
             href="http://blog.8-p.info/2009/feed" title="Japanese + English" />
  <link rel="alternate" type="application/atom+xml"
             href="http://blog.8-p.info/2009/tag/lang-en/feed/atom" title="English" />

  <link rel="icon" href="http://blog.8-p.info/favicon.ico" type="image/vnd.microsoft.icon" />
  <title>blog.8-p.info</title>

<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://blog.8-p.info/2009/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://blog.8-p.info/2009/wp-includes/wlwmanifest.xml" /> 


</head>

<body>

<div id="header">
  <div class="main">
    <h1><a href="/">blog.8-p.info</a></h1>
    <p>加藤和良 (1984年うまれ) の個人的なブログです。</p>
  </div>
  <div class="sidebar">
    <form method="get" action="http://blog.8-p.info/2009/">
      <div id="search">
        <input type="text" class="text" id="searchKeyword"  name="s"
               value="" />
      </div>
    </form>
  </div>
</div>

<div id="body">
   <div class="main">
    <div class="entry" id="entry375">
  <h2 class="entry-title"><a href="http://blog.8-p.info/2009/02/class-sniff">Class::Sniff で継承木をかく</a>
      </h2>
  <div class="yui-g meta">
    <div class="date yui-u first">
      2009-02-11 08:04    </div>
    <div class="tags yui-u">
          </div>
  </div>
  <div class="body"><p class="eyecatch"><img src="http://blog.8-p.info/2009/wp-content/uploads/2009/02/class-sniff.png" alt="Class hierarchy of Remedie" /></p>
<p>「Look for class composition code smells」をうたう <a href="http://search.cpan.org/dist/Class-Sniff/">Class::Sniff</a> で継承木を書いてみた。</p>
<h3>Class::Sniff</h3>
<p>以下のスクリプトは引数にクラスをとり、その情報を表示する。</p>
<pre>
use strict;
use warnings;
use Class::Sniff;

my $sniffer = Class::Sniff-&gt;new({ class => shift });
print $sniffer-&gt;graph-&gt;as_ascii, "\n", $sniffer-&gt;report;
</pre>
<p>この記事用にクラスをつくってもあんまり面白くないと思ったので、今回は Remedie を使ってみた。Remedie::Server::RPC::Player を引数に与えてみる。</p>
<pre>
% ls
Changes         MANIFEST        Makefile.PL     bin/            lib/            t/
HACKING         MANIFEST.SKIP   README          extlib/         root/           xt/
% perl -I lib -MRemedie::Server::RPC::Player ~/1.pl Remedie::Server::RPC::Player
+------------------------------+
|        Moose::Object         |
+------------------------------+
  ^
  |
  |
+------------------------------+
|     Remedie::Server::RPC     |
+------------------------------+
  ^
  |
  |
+------------------------------+
| Remedie::Server::RPC::Player |
+------------------------------+
Report for class: Remedie::Server::RPC::Player

Overridden Methods
.---------+-------------------------------------------------------------------.
| Method  | Class                                                             |
+---------+-------------------------------------------------------------------+
| blessed | Remedie::Server::RPC::Player                                      |
|         | Remedie::Server::RPC                                              |
| confess | Remedie::Server::RPC::Player                                      |
|         | Remedie::Server::RPC                                              |
| meta    | Remedie::Server::RPC::Player                                      |
|         | Remedie::Server::RPC                                              |
|         | Moose::Object                                                     |
| new     | Remedie::Server::RPC::Player                                      |
|         | Remedie::Server::RPC                                              |
|         | Moose::Object                                                     |
'---------+-------------------------------------------------------------------'
Exported Subroutines
.-------------------------+-----------+---------------------------------------.
| Class                   | Method    | Exported From Package                 |
+-------------------------+-----------+---------------------------------------+
| Remedie::Server::RPC    | blessed   | Scalar::Util                          |
|                         | class_has | MooseX::ClassAttribute                |
|                         | confess   | Carp                                  |
| Remedie::Server::RPC::- | SEEK_CUR  | Fcntl                                 |
| Player                  | SEEK_END  | Fcntl                                 |
|                         | SEEK_SET  | Fcntl                                 |
|                         | blessed   | Scalar::Util                          |
|                         | confess   | Carp                                  |
|                         | dir       | Path::Class                           |
|                         | file      | Path::Class                           |
|                         | mkdtemp   | File::Temp                            |
|                         | mkstemp   | File::Temp                            |
|                         | mkstemps  | File::Temp                            |
|                         | mktemp    | File::Temp                            |
|                         | tmpfile   | File::Temp                            |
|                         | tmpnam    | File::Temp                            |
'-------------------------+-----------+---------------------------------------'
Duplicate Methods (Experimental)
.--------------------------------------+--------------------------------------.
| Method                               | Duplicated In                        |
+--------------------------------------+--------------------------------------+
| Remedie::Server::RPC::Player::play_- | Remedie::Server::RPC::Player::play   |
| inline                               |                                      |
| Remedie::Server::RPC::blessed        | Remedie::Server::RPC::Player::bless- |
|                                      | ed                                   |
| Remedie::Server::RPC::meta           | Remedie::Server::RPC::Player::meta   |
| Remedie::Server::RPC::Player::SEEK_- | Remedie::Server::RPC::Player::SEEK_- |
| CUR                                  | SET                                  |
|                                      | Remedie::Server::RPC::Player::SEEK_- |
|                                      | END                                  |
| Remedie::Server::RPC::confess        | Remedie::Server::RPC::Player::confe- |
|                                      | ss                                   |
'--------------------------------------+--------------------------------------'
Long Methods (experimental)
.------------------------------------+----------------------------------------.
| Method                             | Approximate Length                     |
+------------------------------------+----------------------------------------+
| Moose::Object::BUILDARGS           | 166                                    |
| Moose::Object::meta                | 602                                    |
| Remedie::Server::RPC::Player::meta | 417                                    |
| Remedie::Server::RPC::Player::new  | 651                                    |
| Remedie::Server::RPC::attr_cache   | 650                                    |
| Remedie::Server::RPC::conf         | 645                                    |
| Remedie::Server::RPC::meta         | 417                                    |
| Remedie::Server::RPC::new          | 651                                    |
'------------------------------------+----------------------------------------'
%
</pre>
<p>前半の継承を Moose::Object まで辿ったものを graph メソッドが、後半の上書きしているメソッドのリストから長いメソッドのリストまでを report が出力している。Moose に対応しきれていないのがすこし気になるけど、ここでは深追いしない。</p>
<h3>Graph::Easy のグラフをまとめる</h3>
<p>Class::Sniff は個々のクラスに焦点をあわせているけど、次は個々のクラスに関する情報をまとめてシステム全体の継承木を書いてみる。</p>
<p>Class::Sniff の graph メソッドは Graph::Easy のインスタンスを返している。Graph::Easy はノードとエッジをもったふつうのグラフで、さらに GraphViz 形式での出力もある。Graph::Easy のインスタンス同士をつないで、ひとつのグラフを作ってみた。</p>
<pre>
use strict;
use warnings;
use Class::Sniff;

sub package_of {
    my ($path) = @_;

    if ($path !~ m|/?lib/(.*)\.pm$|) {
      die;
    }

    my $result = $1;
    $result =~ s|/|::|g;
    return $result;
}

sub merge_graph {
    my ($result, $graph) = @_;

    my @edges = $graph-&gt;edges;
    foreach my $edge (@edges) {
        my ($source, $target) = $edge-&gt;nodes;
        $result-&gt;add_edge_once($source-&gt;name, $target-&gt;name);
    }
}

my $graph;

for my $path (@ARGV) {
    my $package = package_of($path);
    eval "use $package";

    my $sniffer = Class::Sniff-&gt;new({ class => $package });

    if ($graph) {
        merge_graph($graph, $sniffer-&gt;graph);
    } else {
        $graph = $sniffer-&gt;graph;
    }
}

print $graph-&gt;as_graphviz;
</pre>
<p>引数はひとつのクラスではなく複数のファイル名にした。パスからクラス名を作りそれを use してから Class::Sniff にまわしている。</p>
<pre>
% perl -I lib ~/2.pl lib/**/*.pm | dot -Tpng -o ~/remedie-2.png
Deep recursion on subroutine "B::Concise::sequence" at /System/Library/Perl/5.8.8/darwin-thread-multi-2level/B/Concise.pm line 501.
Deep recursion on subroutine "B::Concise::sequence" at /System/Library/Perl/5.8.8/darwin-thread-multi-2level/B/Concise.pm line 504.
Deep recursion on subroutine "B::Concise::sequence" at /System/Library/Perl/5.8.8/darwin-thread-multi-2level/B/Concise.pm line 507.
Deep recursion on subroutine "B::Concise::sequence" at /System/Library/Perl/5.8.8/darwin-thread-multi-2level/B/Concise.pm line 497.
Deep recursion on subroutine "B::Concise::sequence" at /System/Library/Perl/5.8.8/darwin-thread-multi-2level/B/Concise.pm line 497.
Deep recursion on subroutine "B::Concise::sequence" at /System/Library/Perl/5.8.8/darwin-thread-multi-2level/B/Concise.pm line 497.
Deep recursion on subroutine "B::Concise::sequence" at /System/Library/Perl/5.8.8/darwin-thread-multi-2level/B/Concise.pm line 497.
%
</pre>
<p>生成した <a href="http://blog.8-p.info/2009/wp-content/uploads/2009/02/remedie-2.png">Remedie の継承木</a> の PNG は 8692&#215;443px の巨大なものだけど、ソースを地道に読むより、全体の見通しという意味では良いと思う。</p>
<h3>メソッドも表示する</h3>
<p>ここまでくるとメソッドも表示したくなってくる。クラス名とメソッドのリストとを水平線で区切るとか、そういう凝ったことを GraphViz でやるには node の shape を record に指定する。</p>
<p><a href="http://www.graphviz.org/doc/info/shapes.html">Node Shapes</a></p>
<blockquote><p>These are specified by shape values of &#8220;record&#8221; and &#8220;Mrecord&#8221;. The structure of a record-based node is determined by its label, which has the following schema: (snip)</p></blockquote>
<p>ただ、これを Graph::Easy から指定する方法がわからなかったので、Graph::Easy をあきらめて直接 .dot ファイルを生成してしまった。</p>
<pre>
use strict;
use warnings;
use Class::Sniff;

sub package_of {
    my ($path) = @_;

    if ($path !~ m|/?lib/(.*)\.pm$|) {
      die;
    }

    my $result = $1;
    $result =~ s|/|::|g;
    return $result;
}

sub new_methods {
    my ($sniffer) = @_;
    my %count_of;

    for my $method ($sniffer-&gt;methods) {
        $count_of{$method}++;
    }

    my $klass = $sniffer-&gt;target_class;
    for my $method (keys %{ $sniffer-&gt;exported-&gt;{ $klass } }) {
        $count_of{$method}--;
    }

    grep { $_ } map {
        my $method = $_;

        ($count_of{$method} &gt; 0)? $method : undef;
    } (keys %count_of);
}

my $graph;

print &lt;&lt;END;
digraph GRAPH_0 {
  node [ shape=record ];
END

for my $path (@ARGV) {
    my $package = package_of($path);
    eval "use $package";

    my $sniffer = Class::Sniff-&gt;new({ class =&gt; $package });

    my @methods = new_methods($sniffer);
    my $label = "{$package|" . join('\l', sort @methods)  . '\l}';
    $label =~ s/"/\\"/g;
    print qq["$package" [label="$label"]\n];

    my @parents = $sniffer-&gt;parents;
    foreach my $c (@parents) {
        print qq["$package" -&gt; "$c"\n];
    }
}

print &lt;&lt;END;
}
END
</pre>
<p><a href="http://blog.8-p.info/2009/wp-content/uploads/2009/02/remedie-3.png">Remedie の継承木 + メソッド</a> はさらに大きく 15024&#215;1483px になった。このスクリプトはなにかに使えそうなので <a href="http://gist.github.com/61684">Gist</a> に置いてみました。</p>
<h3>参考と関連</h3>
<dl>
<dt><a href="http://d.hatena.ne.jp/T-ABYSS/20070301/1172768153">GraphvizでER図を書く方法</a></dt>
<dd>GraphViz の使い方を参考にしました</dd>
<dt><a href="http://usuilog.blogspot.com/2006/12/perlumlumlclasssimple.html">UMLシーケンス図の自動生成(UML::Sequence)</a></dt>
<dt><a href="http://d.hatena.ne.jp/T-ABYSS/20070301/1172768153">UMLクラス図の自動生成(UML::Class::Simple)</a></dt>
<dd>この記事をかいている途中に知りました。まだ試していません。</dd>
<dt><a href="http://use.perl.org/~miyagawa/journal/friends/rss">miyagawa&#8217;s Friends&#8217; Journals</a></dt>
<dd>Class::Sniff の存在はこの RSS を読んでいて知りました。<a href="http://use.perl.org/~miyagawa/journal/">Journal of miyagawa (1653)</a> から discovery できます。</dd>
</dl>
</div>
</div>
<div class="entry" id="entry351">
  <h2 class="entry-title"><a href="http://blog.8-p.info/2009/02/simbl">SIMBL で Cocoa アプリケーションにコードをつぎたす</a>
      </h2>
  <div class="yui-g meta">
    <div class="date yui-u first">
      2009-02-01 22:19    </div>
    <div class="tags yui-u">
          </div>
  </div>
  <div class="body"><p>Cocoa アプリケーションは Input Manager という仕組みを使って拡張できて GreaseKit でもこれを使っている。Input Manager は Leopard からホームディレクトリにいれられなくなったり、パーミッションをいじらなきゃいけなかったり、素で使うのが面倒になってしまったので <a href="http://www.culater.net/software/SIMBL/SIMBL.php">SIMBL</a> 経由で使うのが楽だと思う。</p>
<p>というわけで、SIMBL に読み込ませるバンドルの作り方をさわりだけ説明します。</p>
<p>まず Xcode で新しいプロジェクトを作る。左側で Mac OS X の Bundle を、右で Cocoa Bundle をえらぶ。</p>
<div class="eyecatch"><a href="http://www.flickr.com/photos/kzys/3243338891/" title="New Project by kzys, on Flickr"><img src="http://farm4.static.flickr.com/3260/3243338891_9f12ae3078_o.png" width="640" height="250" alt="New Project" /></a></div>
<p>プロジェクトが出来たらクラスをひとつ定義しておく。.m ファイルと .h ファイルを新規に作る。</p>
<div class="eyecatch"><a href="http://www.flickr.com/photos/kzys/3244217638/" title="New File by kzys, on Flickr"><img src="http://farm4.static.flickr.com/3105/3244217638_287efa867a_o.png" width="640" height="170" alt="New File" /></a></div>
<p>名前はとりあえず MainController にした。</p>
<div class="eyecatch"><a href="http://www.flickr.com/photos/kzys/3243387947/" title="MainController by kzys, on Flickr"><img src="http://farm4.static.flickr.com/3511/3243387947_625e0eaa27_o.png" width="640" height="240" alt="MainController" /></a></div>
<p>ここで定義したクラス名は元アプリケーションとかぶれないので注意が必要だ。MainController はありがちすぎるので、プリプロセッサでドメインを逆さまにしたものをつけて逃げてみた。</p>
<pre>
#import &lt;Cocoa/Cocoa.h&gt;

#define MainController ComExampleMainController

@interface MainController : NSObject {
}
@end
</pre>
<p>次に、MainController に load メソッドを追加する。 load は NSObject のクラスメソッドで、クラスの読み込み後に呼ばれる。</p>
<p><a href="http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/nsobject_Class/Reference/Reference.html#//apple_ref/occ/clm/NSObject/load">NSObject Class Reference</a></p>
<blockquote><p>Invoked whenever a class or category is added to the Objective-C runtime; implement this method to perform class-specific behavior upon loading.</p></blockquote>
<p>load メソッドを追加した MainController.m はこんな感じになる。</p>
<pre>
#import "MainController.h"

@implementation MainController

+ (void) load
{
	NSLog(@"hello");
}

@end
</pre>
<p>最後に SIMBL 用の項目を Info.plist に足しておく。アプリケーション起動時に SIMBL が読まれると、SIMBL は個々のバンドルの Info.plist を読んで、いま起動したアプリケーションに一致するものだけを読み込む。</p>
<p>今回はあらゆるバージョンの Safari を指定するべく、以下の項目を Info.plist に追記する。</p>
<pre>
&lt;key&gt;SIMBLTargetApplications&lt;/key&gt;
&lt;array&gt;
    &lt;dict&gt;
        &lt;key&gt;BundleIdentifier&lt;/key&gt;
        &lt;string&gt;com.apple.Safari&lt;/string&gt;
    &lt;/dict&gt;
&lt;/array&gt;
</pre>
<p>Info.plist はプロパティリスト用のちゃんとした編集画面があるけど、慣れない人はオフにしちゃってもいいと思う。</p>
<div class="eyecatch"><a href="http://www.flickr.com/photos/kzys/3243352387/" title="Open As by kzys, on Flickr"><img src="http://farm4.static.flickr.com/3105/3243352387_598387cf51_o.png" width="640" height="120" alt="Open As" /></a></div>
<p>Xcode の作業はここまで。バンドルをビルドして、特定の場所にコピーする。</p>
<pre>
% cd ~/Library/Application\ Support/SIMBL/Plugins/
% ln -s ~/Desktop/Hello/build/Debug/Hello.bundle
% ls
Hello.bundle@
% /Applications/Safari.app/Contents/MacOS/Safari
2009-02-01 23:05:48.080 Safari[30368:10b] hello
%
</pre>
<p>地味だけどちゃんとコードが実行されて hello とでている。あとは [NSApplication sharedApplicaton] とか [NSNotificationCenter defaultCenter] とかクラスメソッドがいくつかあるので、そこからオブジェクトをたぐりよせて、えーと、いろいろできます。</p>
</div>
</div>
<div class="entry" id="entry330">
  <h2 class="entry-title"><a href="http://blog.8-p.info/2009/01/hreview">hReview is just a draft</a>
    (2)  </h2>
  <div class="yui-g meta">
    <div class="date yui-u first">
      2009-01-29 21:33    </div>
    <div class="tags yui-u">
      <a href="http://blog.8-p.info/2009/tag/lang-en" rel="tag">lang-en</a>    </div>
  </div>
  <div class="body"><p><a href="http://www.flickr.com/photos/kzys/3240250191/" title="hReview by kzys, on Flickr"><img src="http://farm4.static.flickr.com/3092/3240250191_013d520530_o.png" width="640" height="200" alt="hReview" /></a></p>
<p>Recently I suggested to use <a href="http://microformats.org/wiki/hreview">hReview</a> for our project. However, my suggestion was rejected and my bosses say &#8220;Ok, hReview is just a <em>draft</em>&#8220;.</p>
<p>IMHO, they are not <a href="http://en.wikipedia.org/wiki/List_of_Dilbert_characters#Pointy-Haired_Boss">Pointy-Haired</a>, but too conservative to make the <em>next</em> web.</p>
<p>So I found <a href="http://microformats.org/wiki/hreview-issues">hReview issue list</a> and subscribed <a href="http://microformats.org/mailman/listinfo/microformats-discuss/">microformats-discuss</a> and <a href="http://microformats.org/mailman/listinfo/microformats-new/">microformats-new</a>. I&#8217;ll try to discuss because I hope to release hReview.</p>
</div>
</div>
    <div class="paginate">
      <a href="http://blog.8-p.info/2009/page/15" >Newer</a>      <a href="http://blog.8-p.info/2009/page/17" >Older</a>    </div>
  </div>
  <div class="sidebar"><h2>About me and this blog</h2>
<p>
  All articles are written by <a href="http://8-p.info/me/">加藤和良</a>.
  A few are <a href="/2009/tag/lang-en">written in English</a>.
</p>

<ul>
  <li>
    <h2>Recent articles</h2>
    <ul>	<li><a href='http://blog.8-p.info/2009/12/wordpress' title='さよなら WordPress'>さよなら WordPress</a></li>
	<li><a href='http://blog.8-p.info/2009/12/chrome-repl-released' title='ChromeRepl released'>ChromeRepl released</a></li>
	<li><a href='http://blog.8-p.info/2009/12/hatena' title='Hatena&#8217;s routing problem'>Hatena&#8217;s routing problem</a></li>
	<li><a href='http://blog.8-p.info/2009/12/test-synchronized' title='Test::Synchronized released'>Test::Synchronized released</a></li>
	<li><a href='http://blog.8-p.info/2009/11/26' title='11月をふりかえる'>11月をふりかえる</a></li>
	<li><a href='http://blog.8-p.info/2009/11/subversion-file-find' title='Subversion のワーキングコピー上の File::Find を速くする'>Subversion のワーキングコピー上の File::Find を速くする</a></li>
	<li><a href='http://blog.8-p.info/2009/11/chrome-repl' title='ChromeRepl - a remote REPL client for Google Chrome'>ChromeRepl - a remote REPL client for Google Chrome</a></li>
	<li><a href='http://blog.8-p.info/2009/10/october' title='10月をふりかえる'>10月をふりかえる</a></li>
	<li><a href='http://blog.8-p.info/2009/10/linux-db-system' title='『Linux-DB システム 構築/運用入門』を読んだ'>『Linux-DB システム 構築/運用入門』を読んだ</a></li>
	<li><a href='http://blog.8-p.info/2009/10/cubic-volume' title='体積パズル'>体積パズル</a></li>
	<li><a href='http://blog.8-p.info/2009/10/scala-scripting' title='Scala で書き捨てスクリプト'>Scala で書き捨てスクリプト</a></li>
	<li><a href='http://blog.8-p.info/2009/09/september' title='9月をふりかえる'>9月をふりかえる</a></li>
	<li><a href='http://blog.8-p.info/2009/09/greasekit-1-7' title='GreaseKit 1.7 released'>GreaseKit 1.7 released</a></li>
	<li><a href='http://blog.8-p.info/2009/09/gcd-1' title='C にクロージャのようなものを追加する Grand Central Dispatch'>C にクロージャのようなものを追加する Grand Central Dispatch</a></li>
	<li><a href='http://blog.8-p.info/2009/09/greasekit-1-6' title='GreaseKit 1.6 released'>GreaseKit 1.6 released</a></li>
	<li><a href='http://blog.8-p.info/2009/09/yapcasia-2009' title='YAPC::Asia 2009 スタッフ日記'>YAPC::Asia 2009 スタッフ日記</a></li>
	<li><a href='http://blog.8-p.info/2009/09/clickatell-sms' title='Clickatell 経由で SMS を送信する'>Clickatell 経由で SMS を送信する</a></li>
	<li><a href='http://blog.8-p.info/2009/09/devel-nytprof' title='Devel::NYTProf を読む'>Devel::NYTProf を読む</a></li>
	<li><a href='http://blog.8-p.info/2009/08/august' title='8月をふりかえる'>8月をふりかえる</a></li>
	<li><a href='http://blog.8-p.info/2009/08/toeic' title='TOEIC スコアとか'>TOEIC スコアとか</a></li>
	<li><a href='http://blog.8-p.info/2009/08/july-kpt' title='7月の KPT'>7月の KPT</a></li>
	<li><a href='http://blog.8-p.info/2009/08/managers-schedule' title='Does anyone like &#8220;Manager&#8217;s Schedule&#8221;?'>Does anyone like &#8220;Manager&#8217;s Schedule&#8221;?</a></li>
	<li><a href='http://blog.8-p.info/2009/07/wewlc' title='『レガシーコード改善ガイド』を読もう (あるいは、テストを書こう)'>『レガシーコード改善ガイド』を読もう (あるいは、テストを書こう)</a></li>
	<li><a href='http://blog.8-p.info/2009/07/newspeak-on-bitbucket' title='Newspeak on Bitbucket'>Newspeak on Bitbucket</a></li>
	<li><a href='http://blog.8-p.info/2009/07/newspeak' title='Newspeak - The search engine for commit logs'>Newspeak - The search engine for commit logs</a></li>
	<li><a href='http://blog.8-p.info/2009/07/php-or-perl' title='What language should we learn?'>What language should we learn?</a></li>
	<li><a href='http://blog.8-p.info/2009/06/june-kpt' title='6月の KPT'>6月の KPT</a></li>
	<li><a href='http://blog.8-p.info/2009/06/html' title='HTML + CSS + JavaScript を組み合わせる難しさ'>HTML + CSS + JavaScript を組み合わせる難しさ</a></li>
	<li><a href='http://blog.8-p.info/2009/06/dsvn-el' title='dsvn.el から Subversion をつかう'>dsvn.el から Subversion をつかう</a></li>
	<li><a href='http://blog.8-p.info/2009/06/google-page-speed' title='Google Page Speed を読む'>Google Page Speed を読む</a></li>
	<li><a href='http://blog.8-p.info/2009/05/may-kpt' title='5月の KPT'>5月の KPT</a></li>
	<li><a href='http://blog.8-p.info/2009/05/testapache2-003-and-004' title='Test::Apache2 0.03 and 0.04'>Test::Apache2 0.03 and 0.04</a></li>
	<li><a href='http://blog.8-p.info/2009/05/code-smell' title='コードの匂いは人に移る'>コードの匂いは人に移る</a></li>
	<li><a href='http://blog.8-p.info/2009/05/test-apache2-released' title='Test::Apache2 をリリースした'>Test::Apache2 をリリースした</a></li>
	<li><a href='http://blog.8-p.info/2009/05/april-kpt' title='4月の KPT'>4月の KPT</a></li>
	<li><a href='http://blog.8-p.info/2009/04/test-apache2' title='My new project: Test::Apache2'>My new project: Test::Apache2</a></li>
	<li><a href='http://blog.8-p.info/2009/04/project-root' title='プロジェクトのルートディレクトリを探す'>プロジェクトのルートディレクトリを探す</a></li>
	<li><a href='http://blog.8-p.info/2009/04/danboard' title='Danboard is my XFD'>Danboard is my XFD</a></li>
	<li><a href='http://blog.8-p.info/2009/04/glitchcam' title='glitchcam'>glitchcam</a></li>
	<li><a href='http://blog.8-p.info/2009/03/kpt' title='3月の KPT'>3月の KPT</a></li>
	<li><a href='http://blog.8-p.info/2009/03/textfield-js-2' title='JavaScript でプレースホルダ、の続き'>JavaScript でプレースホルダ、の続き</a></li>
	<li><a href='http://blog.8-p.info/2009/03/gnu-strlen' title='GNU strlen を読む'>GNU strlen を読む</a></li>
	<li><a href='http://blog.8-p.info/2009/03/textfield-js' title='JavaScript でプレースホルダつき入力欄を作る'>JavaScript でプレースホルダつき入力欄を作る</a></li>
	<li><a href='http://blog.8-p.info/2009/02/life' title='2月の反省と近況'>2月の反省と近況</a></li>
	<li><a href='http://blog.8-p.info/2009/02/class-sniff-combine_graphs' title='New Class::Sniff has &#8220;combine_graphs&#8221;'>New Class::Sniff has &#8220;combine_graphs&#8221;</a></li>
	<li><a href='http://blog.8-p.info/2009/02/class-sniff' title='Class::Sniff で継承木をかく'>Class::Sniff で継承木をかく</a></li>
	<li><a href='http://blog.8-p.info/2009/02/simbl' title='SIMBL で Cocoa アプリケーションにコードをつぎたす'>SIMBL で Cocoa アプリケーションにコードをつぎたす</a></li>
	<li><a href='http://blog.8-p.info/2009/01/hreview' title='hReview is just a draft'>hReview is just a draft</a></li>
	<li><a href='http://blog.8-p.info/2009/01/unwired-life' title='断線生活'>断線生活</a></li>
	<li><a href='http://blog.8-p.info/2009/01/dom-scripting' title='『DOM Scripting 標準ガイドブック』を読んだ'>『DOM Scripting 標準ガイドブック』を読んだ</a></li>
	<li><a href='http://blog.8-p.info/2009/01/object-kv-mapping' title='オブジェクトを key-value ストアに直列化する'>オブジェクトを key-value ストアに直列化する</a></li>
	<li><a href='http://blog.8-p.info/2009/01/chrome-ui-test' title='Google Chrome の UI テスト (実装編)'>Google Chrome の UI テスト (実装編)</a></li>
	<li><a href='http://blog.8-p.info/2009/01/refactoring' title='テストぬきリファクタリング'>テストぬきリファクタリング</a></li>
	<li><a href='http://blog.8-p.info/2009/01/unittest-js' title='UnittestJS でクロスブラウザテスト'>UnittestJS でクロスブラウザテスト</a></li>
	<li><a href='http://blog.8-p.info/2009/01/red-prompt' title='コマンドが失敗したらプロンプトを赤くする'>コマンドが失敗したらプロンプトを赤くする</a></li>
	<li><a href='http://blog.8-p.info/2009/01/blogging-in-english' title='Blogging in English'>Blogging in English</a></li>
	<li><a href='http://blog.8-p.info/2009/01/2009' title='2009'>2009</a></li>
</ul>
  </li>
</ul>

<ul><li id="linkcat-2" class="linkcat"><h2>Links</h2>
	<ul class='xoxo blogroll'>
<li><a href="http://collisions.doppac.cc/">collisions.doppac.cc</a></li>
<li><a href="http://googletesting.blogspot.com/">Google Testing Blog</a></li>
<li><a href="http://www.grafikcache.com/">Grafikcache</a></li>
<li><a href="http://news.ycombinator.com/">Hacker News</a></li>
<li><a href="http://someru.blog74.fc2.com/">Hang Reviewers High</a></li>
<li><a href="http://labs.ideo.com/">IDEO Labs</a></li>
<li><a href="http://blog.makezine.com/">MAKE: Blog</a></li>
<li><a href="http://d.hatena.ne.jp/KZR/">Radium Software</a></li>
<li><a href="http://steps.dodgson.org/">steps to phantasien</a></li>

	</ul>
</li>
</ul>

<p>
  <a href="http://validator.w3.org/check?uri=referer"><img src="http://www.w3.org/Icons/valid-xhtml10" alt="Valid XHTML 1.0 Transitional" height="31" width="88" /></a>
</p>
</div>
</div>


<div id="footer">Powered by <a href="http://wordpress.org/">WordPress</a></div>


<!-- Google Analytics -->
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-329758-2");
pageTracker._trackPageview();
</script>

<script type="text/javascript" src="http://blog.8-p.info/2009/wp-content/themes/b8i/ALL.js"></script>

<script type="text/javascript">//<![CDATA[
(function () {
  var elements = document.body.getElementsByTagName('pre');
  var i, pre;
  for (i = 0; i < elements.length; i++) {
    pre = elements[i];
    if ((pre.innerText || pre.textContent).match(/^[%\(]/)) {
      ;
    } else {
      pre.className += ' prettyprint';
    }
  }
  prettyPrint();

  (new TextField($('searchKeyword'))).setPlaceholder('Search');
})();
//]]></script>

</body>
</html>
